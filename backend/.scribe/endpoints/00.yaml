name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Tags
      subgroupDescription: 'Tags management'
      title: 'Get list of tags'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      slug:
        name: slug
        description: ''
        required: false
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      slug: harum
      page: 19
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"current_page":19,"data":[],"first_page_url":"http:\/\/localhost:8085\/api\/tags?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8085\/api\/tags?page=1","links":[{"url":"http:\/\/localhost:8085\/api\/tags?page=18","label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8085\/api\/tags?page=1","label":"1","active":false},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/localhost:8085\/api\/tags","per_page":10,"prev_page_url":"http:\/\/localhost:8085\/api\/tags?page=18","to":null,"total":0}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Tags
      subgroupDescription: 'Tags management'
      title: 'Get a tag'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"title":"Error","message":"No query results for model [App\\Models\\Tag].","line":598}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Tags
      subgroupDescription: 'Tags management'
      title: 'Create a new tag'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: true
        example: hldenmqljas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      slug: hldenmqljas
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Tags
      subgroupDescription: 'Tags management'
      title: 'Update a tag'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      slug:
        name: slug
        description: 'Must not be greater than 255 characters.'
        required: true
        example: whnzq
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      slug: whnzq
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tags/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Tags
      subgroupDescription: 'Tags management'
      title: 'Update a tag'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'User management'
      title: 'Get list of users'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      email:
        name: email
        description: ''
        required: false
        example: sage.schamberger@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: facere
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      email: sage.schamberger@example.net
      name: facere
      page: 12
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"current_page":12,"data":[],"first_page_url":"http:\/\/localhost:8085\/api\/users?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8085\/api\/users?page=1","links":[{"url":"http:\/\/localhost:8085\/api\/users?page=11","label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8085\/api\/users?page=1","label":"1","active":false},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/localhost:8085\/api\/users","per_page":10,"prev_page_url":"http:\/\/localhost:8085\/api\/users?page=11","to":null,"total":0}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'User management'
      title: 'Get a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"title":"Error","message":"No query results for model [App\\Models\\User].","line":598}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'User management'
      title: 'Create a new user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: eodzifxaqvidvhizgzcf
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: zoe.green@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: eodzifxaqvidvhizgzcf
      email: zoe.green@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'User management'
      title: 'Update a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ykpoyfwmelkj
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: hessel.reva@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ykpoyfwmelkj
      email: hessel.reva@example.com
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Users
      subgroupDescription: 'User management'
      title: 'Delete a user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Posts
      subgroupDescription: 'Post management'
      title: 'Get list of posts'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: ''
        required: false
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      page:
        name: page
        description: ''
        required: false
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      title: animi
      body: aut
      user_id: 8
      page: 6
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"current_page":6,"data":[],"first_page_url":"http:\/\/localhost:8085\/api\/posts?page=1","from":null,"last_page":1,"last_page_url":"http:\/\/localhost:8085\/api\/posts?page=1","links":[{"url":"http:\/\/localhost:8085\/api\/posts?page=5","label":"&laquo; Previous","active":false},{"url":"http:\/\/localhost:8085\/api\/posts?page=1","label":"1","active":false},{"url":null,"label":"Next &raquo;","active":false}],"next_page_url":null,"path":"http:\/\/localhost:8085\/api\/posts","per_page":10,"prev_page_url":"http:\/\/localhost:8085\/api\/posts?page=5","to":null,"total":0}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Posts
      subgroupDescription: 'Post management'
      title: 'Get a post'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: '{"title":"Error","message":"No query results for model [App\\Models\\Post].","line":598}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/posts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Posts
      subgroupDescription: 'Post management'
      title: 'Create a new post'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 50 characters.'
        required: true
        example: ufvxurtmlpxdrnrdwmtu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: true
        example: perferendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: ufvxurtmlpxdrnrdwmtu
      body: ratione
      user_id: autem
      tags: perferendis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Posts
      subgroupDescription: 'Post management'
      title: 'Update a post'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 50 characters.'
        required: true
        example: hoqioicbyzlsuqjueyweomh
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      body:
        name: body
        description: ''
        required: true
        example: ut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tags:
        name: tags
        description: ''
        required: true
        example: exercitationem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: hoqioicbyzlsuqjueyweomh
      body: ut
      user_id: est
      tags: exercitationem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/posts/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: Posts
      subgroupDescription: 'Post management'
      title: 'Delete a post'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
